steps:
  - command: "packer build --only=hyperv-iso --var outfile=boxen/ubuntu-docker-virt-hyperv.box --var headless=true ubuntu-docker-virt.json"
    label: "docker-virt-vmware"
    agents:
      - "packer=true"
      - "vmware=true"
    artifact_paths:
      - "boxen/*.box"
      - "tmp/**/*"
    retry:
      automatic:
        exit_status: "*"
        limit: 3

  - command: "packer build --only=virtualbox-iso --var outfile=boxen/ubuntu-docker-virt-virtualbox.box --var headless=true ubuntu-docker-virt.json"
    label: "docker-virt-virtualbox"
    agents:
      - "packer=true"
      - "virtualbox=true"
    artifact_paths:
      - "boxen/*.box"
      - "tmp/**/*"
    retry:
      automatic:
        exit_status: "*"
        limit: 3

  - command: "packer build --only=hyperv-iso --var outfile=boxen/ubuntu-docker-virt-hyperv.box --var headless=true ubuntu-docker-virt.json"
    label: "docker-virt-hyperv"
    agents:
      - "packer=true"
      - "hyperv=true"
    artifact_paths:
      - "boxen/*.box"
      - "tmp/**/*"
    retry:
      automatic:
        exit_status: "*"
        limit: 3

  - wait

  - command: "rm -rf vagrantcloud_uploader; git clone https://git.widgit.com/scm/online/vagrantcloud_uploader.git && cd vagrantcloud_uploader && buildkite-agent artifact download boxen/* . && buildkite-agent artifact download tmp/**/* . --step docker-virt-vmware && docker pull symbols/minimal-ruby:2.4_3.4 && docker run --rm -v `pwd`:/build -e VAGRANT_CLOUD_TOKEN=$VAGRANT_CLOUD_TOKEN symbols/minimal-ruby:2.4_3.4 /build/build.sh"
    label: "Deploy boxen"