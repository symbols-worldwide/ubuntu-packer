steps:
  - command: "packer build --only=vmware-iso --var outfile=boxen/ubuntu-docker-virt-vmware_desktop.box --var headless=true ubuntu-docker-virt.json"
    label: "docker-virt-vmware"
    agents:
      - "packer=true"
      - "vmware=true"
    artifact_paths:
      - "boxen/*.box"
      - "tmp/**/*"
    retry:
      automatic:
        exit_status: "*"
        limit: 3

  - command: "hostname && packer fix ubuntu-docker-virt.json > fixhv-ubuntu-docker-virt.json && packer build --only=hyperv-iso --var outfile=boxen/ubuntu-docker-virt-hyperv.box --var headless=true fixhv-ubuntu-docker-virt.json"
    label: "docker-virt-hyperv"
    agents:
      - "packer=true"
      - "hyperv=true"
    artifact_paths:
      - "boxen/*.box"
      - "tmp/**/*"
    retry:
      automatic:
        exit_status: "*"
        limit: 3
        
  - command: "packer build --only=vmware-iso --var outfile=boxen/ubuntu-docker-vmware_desktop.box --var headless=true ubuntu-docker.json"
    label: "docker-vmware"
    agents:
      - "packer=true"
      - "vmware=true"
    artifact_paths:
      - "boxen/*.box"
      - "tmp/**/*"
    retry:
      automatic:
        exit_status: "*"
        limit: 3

#  - command: "packer build --only=virtualbox-iso --var outfile=boxen/ubuntu-docker-virtualbox.box --var headless=true ubuntu-docker.json"
#    label: "docker-virtualbox"
#    agents:
#      - "packer=true"
#      - "virtualbox=true"
#    artifact_paths:
#      - "boxen/*.box"
#      - "tmp/**/*"
#    retry:
#      automatic:
#        exit_status: "*"
#        limit: 3

#  - command: "hostname && packer fix ubuntu-docker.json > fixhv-ubuntu-docker.json && packer build --only=hyperv-iso --var outfile=boxen/ubuntu-docker-hyperv.box --var headless=true fixhv-ubuntu-docker.json"
#    label: "docker-hyperv"
#    agents:
#      - "packer=true"
#      - "hyperv=true"
#    artifact_paths:
#      - "boxen/*.box"
#      - "tmp/**/*"
#    retry:
#      automatic:
#        exit_status: "*"
#        limit: 3

  - command: "packer build --only=vmware-iso --var outfile=boxen/ubuntu-minimal-vmware_desktop.box --var headless=true ubuntu-minimal.json"
    label: "minimal-vmware"
    agents:
      - "packer=true"
      - "vmware=true"
    artifact_paths:
      - "boxen/*.box"
      - "tmp/**/*"
    retry:
      automatic:
        exit_status: "*"
        limit: 3

#   - command: "packer build --only=virtualbox-iso --var outfile=boxen/ubuntu-minimal-virtualbox.box --var headless=true ubuntu-minimal.json"
#     label: "minimal-virtualbox"
#     agents:
#       - "packer=true"
#       - "virtualbox=true"
#     artifact_paths:
#       - "boxen/*.box"
#       - "tmp/**/*"
#     retry:
#       automatic:
#         exit_status: "*"
#         limit: 3

#  - command: "hostname && packer fix ubuntu-minimal.json > fixhv-ubuntu-minimal.json && packer build --only=hyperv-iso --var outfile=boxen/ubuntu-minimal-hyperv.box --var headless=true fixhv-ubuntu-minimal.json"
#    label: "minimal-hyperv"
#    agents:
#      - "packer=true"
#      - "hyperv=true"
#    artifact_paths:
#      - "boxen/*.box"
#      - "tmp/**/*"
#    retry:
#      automatic:
#        exit_status: "*"
#        limit: 3

  - wait

  - command: "rm -rf vagrantcloud_uploader; git clone https://git.widgit.com/scm/online/vagrantcloud_uploader.git && cd vagrantcloud_uploader && buildkite-agent artifact download boxen/* . && buildkite-agent artifact download tmp/**/* . --step docker-virt-vmware && docker pull symbols/minimal-ruby:2.4_3.4 && docker run --rm -v `pwd`:/build -e VAGRANT_CLOUD_TOKEN=$VAGRANT_CLOUD_TOKEN symbols/minimal-ruby:2.4_3.4 /build/build.sh"
    agents:
    - "linux=true"
    label: "Deploy boxen"
    
  - wait

  - trigger: "build-ci-agent-vm-images"
